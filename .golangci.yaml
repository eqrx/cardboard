version: "2"
linters:
  # One can't use disable and disable-all. disable-all is preferred to avoid lint failing when golangci gets updated and linters are added.
  # at the same time but it is nice to explicitly state which linters we do not want.
  #disable:
  #- containedctx     # Context.Context within a struct (as opposed to a func parameter) is nasty for many reasons, but actually sometimes useful.
  #- contextcheck     # Not that useful/false positives.
  #- cyclop           # Cyclo complexity already calculated by other linters.
  #- depguard         # We do not restrict imports.
  #- dogsled          # Could be nice in the future.
  #- dupl             # Could be nice in the future.
  #- err113           # Could be nice in the future.
  #- exhaustive       # Not that useful/false positives.
  #- exhaustruct      # Not that useful/false positives.
  #- forcetypeassert  # We want a panic in situations when a type is asserted.
  #- funcorder        # Not that useful/false positives.
  #- funlen           # We really like long functions.
  #- gochecknoglobals # We need globals.
  #- gochecknoinits   # We have a lot of those.
  #- gocognit         # Not that useful/false positives.
  #- godox            # Not that useful/false positives.
  #- gomoddirectives  # Not that useful/false positives.
  #- inamedparam      # Not that useful.
  #- interfacebloat   # WE do bloaty interfaces.
  #- ireturn          # Not that useful/false positives.
  #- mnd              # The annoy is strong.
  #- nakedret         # Naked return good return.
  #- nlreturn         # Could be nice in the future.
  #- nonamedreturns   # Named return good return.
  #- paralleltest     # Could be nice in the future.
  #- recvcheck        # Not that useful/false positives.
  #- tagliatelle      # Reports issues that are not right for us.
  #- testpackage      # Could be nice in the future.
  #- tparallel        # Could be nice in the future.
  #- unparam          # Not that useful/false positives.
  #- varnamelen       # Not that useful/false positives.
  #- wrapcheck        # Not that useful/false positives.
  #- wsl              # Not that useful/false positives.
  default: none
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - copyloopvar
    - decorder
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exptostd
    - fatcontext
    - forbidigo
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecksumtype
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goheader
    - gomodguard
    - goprintffuncname
    - gosec
    - gosmopolitan
    - govet
    - grouper
    - iface
    - importas
    - ineffassign
    - intrange
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - musttag
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - tagalign
    - testableexamples
    - testifylint
    - thelper
    - unconvert
    - unused
    - usestdlibvars
    - usetesting
    - wastedassign
    - whitespace
    - zerologlint
  settings:
    gosec:
      excludes:
        - G301
        - G302
        - G306
        - G601
        - G602
    importas:
      alias:
        - pkg: k8s\.io\/api\/([^\/]+)\/([^\/]+)
          alias: $1$2
        - pkg: k8s\.io\/apimachinery\/pkg\/([^\/]+)
          alias: $1
        - pkg: k8s\.io\/apimachinery\/pkg\/apis\/([^\/]+)\/([^\/]+)
          alias: $1$2
        - pkg: package-operator\.run\/apis
          alias: apis
        - pkg: package-operator\.run\/apis\/([^\/]+)\/([^\/]+)
          alias: $1$2
        - pkg: k8s\.io\/apiextensions-apiserver\/pkg\/apis\/([^\/]+)\/([^\/]+)
          alias: $1$2
        - pkg: github\.com\/openshift\/api\/([^\/]+)\/([^\/]+)
          alias: $1$2
        - pkg: package-operator.run/internal/controllers/hostedclusters/([^\/]+)\/([^\/]+)
          alias: $1$2
        - pkg: k8s\.io\/apimachinery\/pkg\/api\/([^\/]+)
          alias: apimachinery$1
        - pkg: sigs\.k8s\.io\/controller-runtime
          alias: ctrl
        - pkg: package-operator\.run\/internal\/cmd
          alias: internalcmd
        - pkg: package-operator\.run\/internal\/probing
          alias: internalprobing
        - pkg: package-operator\.run\/internal\/controllers\/packages
          alias: controllerspackages
        - pkg: github\.com\/google\/go-containerregistry\/pkg\/v1
          alias: containerregistrypkgv1
        - pkg: k8s\.io\/utils\/clock\/testing
          alias: clocktesting
        - pkg: k8s\.io\/apiserver\/pkg\/cel
          alias: apiservercel
        - pkg: k8s\.io\/apiserver\/pkg\/apis\/cel
          alias: apiserverapiscel
        - pkg: sigs.k8s.io/kind/pkg/apis/config/v1alpha4
          alias: kindv1alpha4
        - pkg: k8s.io/client-go/kubernetes/scheme
          alias: clientgoscheme
        - pkg: sigs.k8s.io/kind/pkg/cmd
          alias: kindcmd
      no-unaliased: false
      no-extra-aliases: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - paralleltest
        path: integration\/.+\.go|run\/target_test.go
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gofmt
    - gofumpt
    - goimports
  settings:
    goimports:
      local-prefixes:
        - package-operator.run
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
